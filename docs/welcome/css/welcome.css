html,
body {
  height: 100%;
  overflow: hidden;
}

body {
  background-color: #62c462;
  background-image: linear-gradient(-45deg, #62c462, #75beaa);
  font-family: "proxima-nova", "Helvetica Neue", sans-serif;
  margin: 0;
}

.button {
  border: 2px solid #ffffff;
  color: #ffffff;
  cursor: pointer;
  display: inline-block;
  font-size: 0.8em;
  font-weight: 500;
  letter-spacing: 3px;
  line-height: 1.3em;
  padding: 1em 1.25em;
  text-decoration: none;
  text-transform: uppercase;
  width: 140px;
}

.button.dark {
  background: #ffffff;
  color: #75beaa;
}

@media (max-width: 568px) {
  .button {
    display: block;
    margin: 1em auto 0;
  }
}

.hero-scroll {
  height: 100%;
  overflow: auto;
  -webkit-overflow-scrolling: touch;
  width: 100%;
}

.hero-outer {
  -webkit-box-sizing: border-box;
          box-sizing: border-box;
  display: table;
  height: 100%;
  padding: 20px 0;
  width: 100%;
}

.hero-outer .hero-inner {
  margin: 0 auto 1em;
  text-align: center;
  width: 540px;
}

@media (max-width: 600px) {
  .hero-outer .hero-inner {
    width: 340px;
  }
}

@media (max-width: 360px) {
  .hero-outer .hero-inner {
    width: 200px;
  }
}

.hero-outer .hero-inner h1,
.hero-outer .hero-inner h2,
.hero-outer .hero-inner h3,
.hero-outer .hero-inner p {
  color: #ffffff;
  font-weight: normal;
  line-height: 1;
  margin: 0 0 20px;
}

.hero-outer .hero-inner h3 {
  font-size: 1.3em;
  padding-top: 13px;
}

.hero-outer .hero-inner h1 {
  padding-top: 10px;
}

.hero-outer .hero-inner > * {
  opacity: 0.3;
  pointer-events: none;
  -webkit-transition: opacity 0.4s;
  transition: opacity 0.4s;
}

body:not(.shepherd-active) .hero-outer .hero-inner > * {
  opacity: 1;
  pointer-events: auto;
}

.hero-outer .hero-inner .shepherd-target.shepherd-enabled {
  opacity: 1;
  pointer-events: auto;
}

.hero-outer .hero-followup {
  padding-top: 20px;
}

pre {
  border: 1px solid rgba(0, 0, 0, 0.15);
  line-height: 1.4em;
}

.shepherd-element, .shepherd-element:after, .shepherd-element:before,
.shepherd-element *,
.shepherd-element *:after,
.shepherd-element *:before {
  -webkit-box-sizing: border-box;
          box-sizing: border-box;
}

.shepherd-element {
  -webkit-filter: drop-shadow(0 1px 4px rgba(0, 0, 0, 0.2));
          filter: drop-shadow(0 1px 4px rgba(0, 0, 0, 0.2));
  max-height: 100%;
  max-width: 100%;
  width: 420px;
  z-index: 9999;
}

.shepherd-element .popper__arrow {
  border: 16px solid transparent;
  content: '';
  display: block;
  height: 0;
  pointer-events: none;
  position: absolute;
  width: 0;
}

.shepherd-element[x-placement^='top'] {
  margin-bottom: 16px;
}

.shepherd-element[x-placement^='top'] .popper__arrow {
  border-bottom: 0;
  border-top-color: #ffffff;
  bottom: -16px;
  left: calc(50% - 16px);
}

.shepherd-element[x-placement^='bottom'] {
  margin-top: 16px;
}

.shepherd-element[x-placement^='bottom'] .popper__arrow {
  border-bottom-color: #eeeeee;
  border-top: 0;
  left: calc(50% - 16px);
  top: -16px;
}

.shepherd-element[x-placement^='left'] {
  margin-right: 16px;
}

.shepherd-element[x-placement^='left'] .popper__arrow {
  border-left-color: #ffffff;
  border-right: 0;
  margin-top: -16px;
  right: -16px;
  top: calc(50% - 16px);
}

.shepherd-element[x-placement^='right'] {
  margin-left: 16px;
}

.shepherd-element[x-placement^='right'] .popper__arrow {
  border-left: 0;
  border-right-color: #ffffff;
  left: -16px;
  top: calc(50% - 16px);
}

.shepherd-element.shepherd-has-title .shepherd-content .shepherd-header {
  padding-bottom: 0.75em;
}

.shepherd-element .shepherd-content {
  background: none;
  font-size: inherit;
}

.shepherd-element .shepherd-content .shepherd-header {
  *zoom: 1;
  background: #eeeeee;
  border-top-left-radius: 5px;
  border-top-right-radius: 5px;
  line-height: 2em;
  padding: 0.75em 0.75em 0;
}

.shepherd-element .shepherd-content .shepherd-header:after {
  clear: both;
  content: '';
  display: table;
}

.shepherd-element .shepherd-content .shepherd-header .shepherd-title,
.shepherd-element .shepherd-content .shepherd-header .shepherd-cancel-link {
  font-weight: normal;
  margin: 0;
  padding: 0;
  position: relative;
  vertical-align: middle;
}

.shepherd-element .shepherd-content .shepherd-header .shepherd-title {
  color: rgba(0, 0, 0, 0.75);
  float: left;
  font-size: 1.1em;
}

.shepherd-element .shepherd-content .shepherd-header .shepherd-cancel-link {
  color: rgba(179, 179, 179, 0.75);
  float: right;
  font-size: 2em;
  text-decoration: none;
  -webkit-transition: color 0.5s ease;
  transition: color 0.5s ease;
}

.shepherd-element .shepherd-content .shepherd-header .shepherd-cancel-link:before {
  content: '\D7';
}

.shepherd-element .shepherd-content .shepherd-header .shepherd-cancel-link:hover {
  color: rgba(0, 0, 0, 0.75);
}

.shepherd-element .shepherd-content .shepherd-text {
  background: #ffffff;
  color: rgba(0, 0, 0, 0.75);
  line-height: 1.3em;
  padding: 0.75em;
}

.shepherd-element .shepherd-content .shepherd-text p {
  margin-top: 0;
}

.shepherd-element .shepherd-content .shepherd-text p:last-child {
  margin-bottom: 0;
}

.shepherd-element .shepherd-content .shepherd-footer {
  background: #ffffff;
  border-bottom-left-radius: 5px;
  border-bottom-right-radius: 5px;
  padding: 0 0.75em 0.75em;
}

.shepherd-element .shepherd-content .shepherd-footer .shepherd-buttons {
  list-style: none;
  margin: 0;
  padding: 0;
  text-align: right;
}

.shepherd-element .shepherd-content .shepherd-footer .shepherd-buttons li {
  display: inline;
  margin: 0 0.5em 0 0;
}

.shepherd-element .shepherd-content .shepherd-footer .shepherd-buttons li:last-child {
  margin-right: 0;
}

.shepherd-element .shepherd-content .shepherd-footer .shepherd-buttons li .shepherd-button {
  display: inline-block;
  *display: inline;
  vertical-align: middle;
  *vertical-align: auto;
  *zoom: 1;
  background: #55a892;
  border: 0;
  border-radius: 3px;
  color: rgba(255, 255, 255, 0.75);
  cursor: pointer;
  font-family: inherit;
  font-size: 0.8em;
  letter-spacing: 0.1em;
  line-height: 1em;
  padding: 0.75em 2em;
  text-transform: uppercase;
  -webkit-transition: all 0.5s ease;
  transition: all 0.5s ease;
}

.shepherd-element .shepherd-content .shepherd-footer .shepherd-buttons li .shepherd-button:hover {
  background: #448675;
}

.shepherd-element .shepherd-content .shepherd-footer .shepherd-buttons li .shepherd-button.shepherd-button-secondary {
  background: #e5e5e5;
  color: rgba(0, 0, 0, 0.75);
}

.shepherd-element .shepherd-content .shepherd-footer .shepherd-buttons li .shepherd-button.shepherd-button-secondary:hover {
  background: #cbcbcb;
  color: rgba(0, 0, 0, 0.75);
}

.shepherd-welcome .popper__arrow {
  border: 16px solid transparent;
  content: '';
  display: block;
  height: 0;
  position: absolute;
  width: 0;
}

.shepherd-welcome[x-placement^='top'] {
  margin-bottom: 16px;
}

.shepherd-welcome[x-placement^='top'] .popper__arrow {
  border-bottom: 0;
  border-top-color: #ffffff;
  bottom: -16px;
  left: calc(50% - 16px);
}

.shepherd-welcome[x-placement^='bottom'] {
  margin-top: 16px;
}

.shepherd-welcome[x-placement^='bottom'] .popper__arrow {
  border-bottom-color: #ffffff;
  border-top: 0;
  left: calc(50% - 16px);
  top: -16px;
}

.shepherd-welcome[x-placement^='left'] {
  margin-right: 16px;
}

.shepherd-welcome[x-placement^='left'] .popper__arrow {
  border-left-color: #ffffff;
  border-right: 0;
  margin-top: -16px;
  right: -16px;
  top: calc(50% - 16px);
}

.shepherd-welcome[x-placement^='right'] {
  margin-left: 16px;
}

.shepherd-welcome[x-placement^='right'] .popper__arrow {
  border-left: 0;
  border-right-color: #ffffff;
  left: -16px;
  top: calc(50% - 16px);
}

.shepherd-welcome .shepherd-content .shepherd-header {
  background: #ffffff;
}

.shepherd-welcome .shepherd-content .shepherd-text {
  color: #336457;
}

/*# sourceMappingURL=data:application/json;base64, */